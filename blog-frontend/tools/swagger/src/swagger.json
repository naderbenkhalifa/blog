{
  "swagger" : "2.0",
  "info" : {
    "description" : "Blog API documentation",
    "version" : "0.0.1-SNAPSHOT",
    "title" : "Blog REST API",
    "contact" : {
      "name" : "Nader Ben Khalifa",
      "email" : "nader.benkhalifa78@gmail.com"
    }
  },
  "basePath" : "http://localhost:8010",
  "tags" : [ {
    "name" : "contacts"
  }, {
    "name" : "posts"
  }, {
    "name" : "users"
  } ],
  "paths" : {
    "/api/contacts/all" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Renvoi la liste des contacts",
        "description" : "Cette methode permet de chercher et renvoyer la liste des contacts qui existent dans la BDD",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des contacts / Une liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contact"
              }
            }
          }
        }
      }
    },
    "/api/contacts/create" : {
      "post" : {
        "tags" : [ "contacts" ],
        "summary" : "Enregistrer un contact",
        "description" : "Cette methode permet d'enregistrer un contact",
        "operationId" : "save",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet contact crée",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          },
          "400" : {
            "description" : "L'objet contact n'est pas valide"
          }
        }
      }
    },
    "/api/contacts/delete/{idcontact}" : {
      "delete" : {
        "tags" : [ "contacts" ],
        "summary" : "Supprimer un contact",
        "description" : "Cette methode permet de supprimer un contact par ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "idcontact",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "contact a été supprimé"
          }
        }
      }
    },
    "/api/contacts/get/{idcontact}" : {
      "get" : {
        "tags" : [ "contacts" ],
        "summary" : "Rechercher un contact par ID",
        "description" : "Cette methode permet de chercher un contact par son ID",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idcontact",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "contact a ete trouve dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          },
          "404" : {
            "description" : "Aucun contact n'existe dans la BDD avec l'ID fourni"
          }
        }
      }
    },
    "/api/contacts/update/{idcontact}" : {
      "put" : {
        "tags" : [ "contacts" ],
        "summary" : "modifier un contact",
        "description" : "Cette methode permet de modifier un contact",
        "operationId" : "updateFood",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idcontact",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet contact a été modifié",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          },
          "400" : {
            "description" : "L'objet contact n'est pas valide"
          }
        }
      }
    },
    "/api/posts/all" : {
      "get" : {
        "tags" : [ "posts" ],
        "summary" : "Renvoi la liste des posts",
        "description" : "Cette methode permet de chercher et renvoyer la liste des posts qui existent dans la BDD",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des posts / Une liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PostDto"
              }
            }
          }
        }
      }
    },
    "/api/posts/create" : {
      "post" : {
        "tags" : [ "posts" ],
        "summary" : "Enregistrer un post",
        "description" : "Cette methode permet d'enregistrer un post",
        "operationId" : "save",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet post crée",
            "schema" : {
              "$ref" : "#/definitions/PostDto"
            }
          },
          "400" : {
            "description" : "L'objet post n'est pas valide"
          }
        }
      }
    },
    "/api/posts/delete/{idpost}" : {
      "delete" : {
        "tags" : [ "posts" ],
        "summary" : "Supprimer un post",
        "description" : "Cette methode permet de supprimer un post par ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "idpost",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "post a été supprimé"
          }
        }
      }
    },
    "/api/posts/get/{idpost}" : {
      "get" : {
        "tags" : [ "posts" ],
        "summary" : "Rechercher un post par ID",
        "description" : "Cette methode permet de chercher un post par son ID",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idpost",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "post a ete trouve dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/PostDto"
            }
          },
          "404" : {
            "description" : "Aucun post n'existe dans la BDD avec l'ID fourni"
          }
        }
      }
    },
    "/api/posts/update/{idpost}" : {
      "put" : {
        "tags" : [ "posts" ],
        "summary" : "modifier un aliment",
        "description" : "Cette methode permet de modifier un post",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "idpost",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet post été modifié",
            "schema" : {
              "$ref" : "#/definitions/PostDto"
            }
          },
          "400" : {
            "description" : "L'objet post n'est pas valide"
          }
        }
      }
    },
    "/api/users/all" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Renvoi la liste des utilisateurs",
        "description" : "Cette methode permet de chercher et renvoyer la liste des utilisateurs qui existent dans la BDD",
        "operationId" : "findAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "La liste des utilisateurs / Une liste vide",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/api/users/create" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Enregistrer un utilisateur",
        "description" : "Cette methode permet d'enregistrer un utilisateur",
        "operationId" : "save",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet utilisateur crée",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "L'objet utilisateur n'est pas valide"
          }
        }
      }
    },
    "/api/users/delete/{iduser}" : {
      "delete" : {
        "tags" : [ "users" ],
        "summary" : "Supprimer un utilisateur",
        "description" : "Cette methode permet de supprimer un utilisateur par ID",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "iduser",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "l'utilisateur a été supprimé"
          }
        }
      }
    },
    "/api/users/find/{email}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Chercher la liste des utilisateurs par email",
        "description" : "Cette methode permet de Chercher la liste des utilisateurs par email",
        "operationId" : "findByEmail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "La liste des utilisateurs /liste vide",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/finduser/{password}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Chercher la liste des utilisateurs par password",
        "description" : "Cette methode permet de Chercher la liste des utilisateurs par password",
        "operationId" : "findByPassword",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "password",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "La liste des utilisateurs /liste vide",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/api/users/get/{email}/{password}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Rechercher un utilisateur par email et password",
        "description" : "Cette methode permet de chercher un utilisateur par son email et password",
        "operationId" : "findByEmailAndPassword",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'utilisateur a ete trouve dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "Aucun utilisateur n'existe dans la BDD avec l'ID fourni"
          }
        }
      }
    },
    "/api/users/get/{iduser}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Rechercher un utilisateur par ID",
        "description" : "Cette methode permet de chercher un utilisateur par son ID",
        "operationId" : "findById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "iduser",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "L'utilisateur a ete trouve dans la BDD",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "Aucun utilisateur n'existe dans la BDD avec l'ID fourni"
          }
        }
      }
    },
    "/users/api/login/create" : {
      "post" : {
        "tags" : [ "users" ],
        "summary" : "Enregistrer utilisateurlogin",
        "description" : "Cette methode permet d'enregistrer un utilisateurlogin",
        "operationId" : "addUserLogin",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "L'objet utilisateurlogin crée",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "L'objet utilisateurlogin n'est pas valide"
          }
        }
      }
    }
  },
  "definitions" : {
    "Contact" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "subject" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "PostDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "content" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      }
    }
  }
}